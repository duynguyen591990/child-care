/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MainFormAdmin.java
 *
 * Created on Nov 22, 2009, 9:35:39 AM
 */

package GUI;

import Util.InformationAdmin;
import Util.InformationStaff;
import Util.InitTable;
import Util.MD5Password;
import Util.MyConnection;
import Util.SizeMonition;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.security.NoSuchAlgorithmException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Date;
import java.util.Vector;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Nguyen Dinh Tan
 */
public class MainFormAdmin extends javax.swing.JFrame {
    private  int x;
    private  int y;
    Vector<Vector> vtData;
    public static String StaffID;
    public static String ChildID;
    public static String NannyID;
    public static String AdminID;
    public static String AgeGroupID;
    public static String ClassID;
    public static String ClassName;
    public static String AgegroupId;
    public static String ActiveID;
    public static Vector vtCol;

    public  Vector vtDataSearchStaff;
    public  Vector vtDataSearchChild;
    public  Vector vtDataSearchNanny;
    public  Vector vtDataSearchClass;
    public  Vector vtDataSearchActive;

    public  boolean searchStaff=false;
    public  boolean searchChild=false;
    public  boolean searchNanny=false;
    public  boolean searchClass=false;
    public  boolean searchActive=false;
    /** Creates new form MainFormAdmin */
    @SuppressWarnings("static-access") {
        initComponents();
        ThreadTime time=new ThreadTime();
        time.start();
        ImageIcon icon = new ImageIcon(getClass().getResource("/image/logo.png"));
        Image image = icon.getImage();
        setIconImage(image);
        Dimension ds= Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation((ds.width-this.getWidth())/2,(ds.height-this.getHeight())/2);
        x=this.getWidth();
        y=this.getHeight();
        motion();
        if(Loginuser.logIsAdmin){
            initAdmin();
        }
        else{
            initStaff();
        }
        if(!Loginuser.logIsAdmin){
            jTabbedPane1.removeTabAt(0);
            btnUser.setEnabled(false);
            mnuEditAdmin.setEnabled(false);

        }
        new InitTable().inittablestaff(tblStaff);
        new InitTable().initTableChild(tblChild);
        new InitTable().inittableNanny(tblNanny);
        new InitTable().inittableClass(tblClass);
        new InitTable().inittableAgeGroup(tblAgeGroup);
        new InitTable().inittableActive(tblActive);

    }
    
    private void motion()
    {
        this.setSize(0, 0);
        new Thread(new SizeMonition(this, x,y)).start();
    }
    public void initAdmin(){
        lbUserName.setText(InformationAdmin.getUser());
        lbName.setText(InformationAdmin.getFullName());
        lbAddress.setText(InformationAdmin.getAddress());
        lbPhone.setText(InformationAdmin.getPhone());
        lbEmail.setText(InformationAdmin.getEmail());
        lbDescription.setText("*Administrator*");
    }
    public void initStaff(){
        lbName.setText(InformationStaff.getFullName());
        lbUserName.setText(InformationStaff.getUser());
        lbName.setText(InformationStaff.getFullName());
        lbAddress.setText(InformationStaff.getAddress());
        lbPhone.setText(InformationStaff.getPhone());
        lbEmail.setText(InformationStaff.getEmail());
        lbDescription.setText("***Staff***");
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btngActive = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        lbDescription = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        lbUserName = new javax.swing.JTextField();
        lbName = new javax.swing.JTextField();
        lbPhone = new javax.swing.JTextField();
        lbEmail = new javax.swing.JTextField();
        lbAddress = new javax.swing.JTextField();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblStaff = new javax.swing.JTable();
        btnAddStaff = new javax.swing.JButton();
        btnEditStaff = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        txtchoice = new javax.swing.JComboBox();
        txtSearch = new javax.swing.JTextField();
        btnResetPass = new javax.swing.JButton();
        btnDetailStaff = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblChild = new javax.swing.JTable();
        btnAddChild = new javax.swing.JButton();
        btnEditChild = new javax.swing.JButton();
        btnSearchChild = new javax.swing.JButton();
        txtSearchChild = new javax.swing.JTextField();
        txtchoicechild = new javax.swing.JComboBox();
        btnDetailChild = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblNanny = new javax.swing.JTable();
        btnDetailNanny = new javax.swing.JButton();
        btnAddNanny = new javax.swing.JButton();
        txtchoicenanny = new javax.swing.JComboBox();
        btnEditNanny = new javax.swing.JButton();
        txtSearchNanny = new javax.swing.JTextField();
        btnSearchNanny = new javax.swing.JButton();
        addSelectClass = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblClass = new javax.swing.JTable();
        txtchoiceClass = new javax.swing.JComboBox();
        txtSearchClass = new javax.swing.JTextField();
        btnAddClass = new javax.swing.JButton();
        btnEditClass = new javax.swing.JButton();
        btnSearchClass = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        btnDetailClass = new javax.swing.JButton();
        btnAddActive = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        tblAgeGroup = new javax.swing.JTable();
        btnAddAgeGroup = new javax.swing.JButton();
        btnEditAgeGroup = new javax.swing.JButton();
        btnDetailAgeGroup = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        tblActive = new javax.swing.JTable();
        txtchoiceActive = new javax.swing.JComboBox();
        btnEditActive = new javax.swing.JButton();
        txtSearchActive = new javax.swing.JTextField();
        btnSearchActive = new javax.swing.JButton();
        btnAddactive = new javax.swing.JButton();
        btnDetailActive = new javax.swing.JButton();
        Admin = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jToolBar1 = new javax.swing.JToolBar();
        btnExit = new javax.swing.JButton();
        btnLogout = new javax.swing.JButton();
        btnPrev = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        btnUser = new javax.swing.JButton();
        lbtime = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        mnuLogout = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JSeparator();
        mnuExit = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        mnuEditAdmin = new javax.swing.JMenuItem();
        mnuchagepass = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("ChildCare System");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        lbDescription.setFont(new java.awt.Font("Times New Roman", 0, 18));
        lbDescription.setText("Description");

        jLabel1.setFont(new java.awt.Font(".VnPresent", 1, 36));
        jLabel1.setForeground(new java.awt.Color(255, 0, 51));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/banners.png"))); // NOI18N

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/admin3.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel2)
                .addContainerGap(44, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(lbDescription)
                .addContainerGap(69, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbDescription)
                .addGap(46, 46, 46)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setText("UserName:");

        jLabel4.setText("Name:");

        jLabel7.setText("Phone :");

        jLabel8.setText("Email :");

        jLabel9.setText("Address:");

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel19.setForeground(new java.awt.Color(255, 0, 0));
        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/online.jpg"))); // NOI18N
        jLabel19.setText("Online");

        lbUserName.setEditable(false);

        lbName.setEditable(false);
        lbName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lbNameActionPerformed(evt);
            }
        });

        lbPhone.setEditable(false);

        lbEmail.setEditable(false);
        lbEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lbEmailActionPerformed(evt);
            }
        });

        lbAddress.setEditable(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbAddress, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                    .addComponent(lbEmail, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                    .addComponent(lbPhone, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                    .addComponent(lbName, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                    .addComponent(lbUserName, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(lbUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(lbName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(lbPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addComponent(jLabel19)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 255));
        jTabbedPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));

        tblStaff.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblStaff);

        btnAddStaff.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/add.png"))); // NOI18N
        btnAddStaff.setText("Add");
        btnAddStaff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddStaffActionPerformed(evt);
            }
        });

        btnEditStaff.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Edit2.png"))); // NOI18N
        btnEditStaff.setText("Edit");
        btnEditStaff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditStaffActionPerformed(evt);
            }
        });

        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Search.png"))); // NOI18N
        btnSearch.setText("Search");
        btnSearch.setPreferredSize(new java.awt.Dimension(93, 31));
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        txtchoice.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ID", "Name" }));

        btnResetPass.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/reset.png"))); // NOI18N
        btnResetPass.setText("Reset Pass");
        btnResetPass.setPreferredSize(new java.awt.Dimension(93, 31));
        btnResetPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetPassActionPerformed(evt);
            }
        });

        btnDetailStaff.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/detail.png"))); // NOI18N
        btnDetailStaff.setText("Detail");
        btnDetailStaff.setPreferredSize(new java.awt.Dimension(59, 31));
        btnDetailStaff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetailStaffActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 755, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(264, Short.MAX_VALUE)
                .addComponent(txtchoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(236, 236, 236))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(92, Short.MAX_VALUE)
                .addComponent(btnDetailStaff, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAddStaff, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnEditStaff, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnResetPass, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtchoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddStaff)
                    .addComponent(btnEditStaff)
                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnResetPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDetailStaff, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(332, 332, 332))
        );

        jTabbedPane1.addTab("Staff", new javax.swing.ImageIcon(getClass().getResource("/image/User.png")), jPanel8); // NOI18N

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        tblChild.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblChild.setSelectionBackground(new java.awt.Color(255, 51, 51));
        jScrollPane3.setViewportView(tblChild);

        btnAddChild.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/add.png"))); // NOI18N
        btnAddChild.setText("Add");
        btnAddChild.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddChildActionPerformed(evt);
            }
        });

        btnEditChild.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/edit3.png"))); // NOI18N
        btnEditChild.setText("Edit");
        btnEditChild.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditChildActionPerformed(evt);
            }
        });

        btnSearchChild.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Search.png"))); // NOI18N
        btnSearchChild.setText("Search");
        btnSearchChild.setPreferredSize(new java.awt.Dimension(93, 31));
        btnSearchChild.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchChildActionPerformed(evt);
            }
        });

        txtchoicechild.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ID", "Name" }));

        btnDetailChild.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/detail.png"))); // NOI18N
        btnDetailChild.setText("Detail");
        btnDetailChild.setPreferredSize(new java.awt.Dimension(59, 31));
        btnDetailChild.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetailChildActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 755, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(327, Short.MAX_VALUE)
                .addComponent(txtchoicechild, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtSearchChild, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(173, 173, 173))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(131, 131, 131)
                .addComponent(btnDetailChild, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAddChild, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnEditChild, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSearchChild, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(144, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearchChild, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtchoicechild, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDetailChild, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddChild)
                    .addComponent(btnEditChild, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchChild, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(55, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Child", new javax.swing.ImageIcon(getClass().getResource("/image/logo.png")), jPanel4); // NOI18N

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));

        tblNanny.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(tblNanny);

        btnDetailNanny.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/detail.png"))); // NOI18N
        btnDetailNanny.setText("Detail");
        btnDetailNanny.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetailNannyActionPerformed(evt);
            }
        });

        btnAddNanny.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/add.png"))); // NOI18N
        btnAddNanny.setText("Add");
        btnAddNanny.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNannyActionPerformed(evt);
            }
        });

        txtchoicenanny.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ID", "Name" }));

        btnEditNanny.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Edit2.png"))); // NOI18N
        btnEditNanny.setText("Edit");
        btnEditNanny.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditNannyActionPerformed(evt);
            }
        });

        btnSearchNanny.setText("Search");
        btnSearchNanny.setPreferredSize(new java.awt.Dimension(93, 31));
        btnSearchNanny.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchNannyActionPerformed(evt);
            }
        });

        addSelectClass.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/add.jpg"))); // NOI18N
        addSelectClass.setText("Add Class");
        addSelectClass.setPreferredSize(new java.awt.Dimension(103, 31));
        addSelectClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSelectClassActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 755, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(63, Short.MAX_VALUE)
                .addComponent(btnDetailNanny, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAddNanny, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEditNanny, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSearchNanny, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addSelectClass, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(92, 92, 92))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(241, Short.MAX_VALUE)
                .addComponent(txtchoicenanny, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtSearchNanny, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(259, 259, 259))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearchNanny, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtchoicenanny, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddNanny)
                    .addComponent(btnEditNanny)
                    .addComponent(btnSearchNanny, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDetailNanny, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addSelectClass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(72, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Nanny", new javax.swing.ImageIcon(getClass().getResource("/image/nanny.png")), jPanel7); // NOI18N

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        tblClass.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane6.setViewportView(tblClass);

        txtchoiceClass.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ID", "Name" }));

        btnAddClass.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/add.png"))); // NOI18N
        btnAddClass.setText("Add");
        btnAddClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddClassActionPerformed(evt);
            }
        });

        btnEditClass.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/edit.png"))); // NOI18N
        btnEditClass.setText("Edit");
        btnEditClass.setPreferredSize(new java.awt.Dimension(75, 31));
        btnEditClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditClassActionPerformed(evt);
            }
        });

        btnSearchClass.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Search1.png"))); // NOI18N
        btnSearchClass.setText("Search");
        btnSearchClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchClassActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/reset.png"))); // NOI18N
        jButton1.setText("Reset");
        jButton1.setPreferredSize(new java.awt.Dimension(81, 31));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnDetailClass.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/detail.png"))); // NOI18N
        btnDetailClass.setText("Detail");
        btnDetailClass.setPreferredSize(new java.awt.Dimension(59, 31));
        btnDetailClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetailClassActionPerformed(evt);
            }
        });

        btnAddActive.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/add.jpg"))); // NOI18N
        btnAddActive.setText("Add Active");
        btnAddActive.setPreferredSize(new java.awt.Dimension(85, 31));
        btnAddActive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActiveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 755, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(264, Short.MAX_VALUE)
                .addComponent(txtchoiceClass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtSearchClass, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(236, 236, 236))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(btnDetailClass, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAddClass, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEditClass, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSearchClass, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAddActive, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearchClass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtchoiceClass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEditClass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddClass)
                    .addComponent(btnSearchClass)
                    .addComponent(btnDetailClass, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddActive, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(59, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Class", new javax.swing.ImageIcon(getClass().getResource("/image/Class.png")), jPanel5); // NOI18N

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        tblAgeGroup.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane7.setViewportView(tblAgeGroup);

        btnAddAgeGroup.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/add.png"))); // NOI18N
        btnAddAgeGroup.setText("Add");
        btnAddAgeGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddAgeGroupActionPerformed(evt);
            }
        });

        btnEditAgeGroup.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/edit3.png"))); // NOI18N
        btnEditAgeGroup.setText("Edit");
        btnEditAgeGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditAgeGroupActionPerformed(evt);
            }
        });

        btnDetailAgeGroup.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/detail.png"))); // NOI18N
        btnDetailAgeGroup.setText("Detail");
        btnDetailAgeGroup.setPreferredSize(new java.awt.Dimension(59, 31));
        btnDetailAgeGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetailAgeGroupActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 755, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(234, Short.MAX_VALUE)
                .addComponent(btnDetailAgeGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAddAgeGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEditAgeGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(170, 170, 170))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddAgeGroup)
                    .addComponent(btnEditAgeGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDetailAgeGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(108, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Agegroup", new javax.swing.ImageIcon(getClass().getResource("/image/logo.png")), jPanel6); // NOI18N

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        tblActive.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane8.setViewportView(tblActive);

        txtchoiceActive.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ID", "Name" }));

        btnEditActive.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/edit3.png"))); // NOI18N
        btnEditActive.setText("Edit");
        btnEditActive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActiveActionPerformed(evt);
            }
        });

        btnSearchActive.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Search.png"))); // NOI18N
        btnSearchActive.setText("Search");
        btnSearchActive.setPreferredSize(new java.awt.Dimension(93, 31));
        btnSearchActive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActiveActionPerformed(evt);
            }
        });

        btnAddactive.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/add.png"))); // NOI18N
        btnAddactive.setText("Add");
        btnAddactive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddactiveActionPerformed(evt);
            }
        });

        btnDetailActive.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/detail.png"))); // NOI18N
        btnDetailActive.setText("Detail");
        btnDetailActive.setPreferredSize(new java.awt.Dimension(59, 31));
        btnDetailActive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetailActiveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 755, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(264, Short.MAX_VALUE)
                .addComponent(txtchoiceActive, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtSearchActive, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(236, 236, 236))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(108, Short.MAX_VALUE)
                .addComponent(btnDetailActive, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAddactive, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEditActive, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSearchActive, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(170, 170, 170))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearchActive, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtchoiceActive, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEditActive, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchActive, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddactive)
                    .addComponent(btnDetailActive, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(60, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Active", new javax.swing.ImageIcon(getClass().getResource("/image/logo.png")), jPanel3); // NOI18N

        Admin.setBackground(new java.awt.Color(255, 255, 255));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/banner10.png"))); // NOI18N

        jTextArea1.setColumns(20);
        jTextArea1.setEditable(false);
        jTextArea1.setRows(5);
        jTextArea1.setText("\t\t\t\tTeacher : Vu Anh Dung");
        jTextArea1.setBorder(javax.swing.BorderFactory.createTitledBorder("instructors"));
        jScrollPane1.setViewportView(jTextArea1);

        jTextArea2.setBackground(new java.awt.Color(236, 233, 216));
        jTextArea2.setColumns(20);
        jTextArea2.setEditable(false);
        jTextArea2.setRows(5);
        jTextArea2.setText("\t\t\t\t\n\t\t\t\tNguyen Dinh Tan\t\n\t\t\t\tLe Thanh Dung(GL)\n\t\t\t\tPham Bao Hieu\n\t\t\t\tNguyen Van Chinh");
        jTextArea2.setBorder(javax.swing.BorderFactory.createTitledBorder("Group Member"));
        jScrollPane5.setViewportView(jTextArea2);

        javax.swing.GroupLayout AdminLayout = new javax.swing.GroupLayout(Admin);
        Admin.setLayout(AdminLayout);
        AdminLayout.setHorizontalGroup(
            AdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AdminLayout.createSequentialGroup()
                .addGroup(AdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 756, Short.MAX_VALUE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 756, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 756, Short.MAX_VALUE))
                .addContainerGap())
        );
        AdminLayout.setVerticalGroup(
            AdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AdminLayout.createSequentialGroup()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("About", new javax.swing.ImageIcon(getClass().getResource("/image/admin.png")), Admin); // NOI18N

        jToolBar1.setRollover(true);

        btnExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Exit.png"))); // NOI18N
        btnExit.setFocusable(false);
        btnExit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnExit.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });
        jToolBar1.add(btnExit);

        btnLogout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/exit3.png"))); // NOI18N
        btnLogout.setFocusable(false);
        btnLogout.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnLogout.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });
        jToolBar1.add(btnLogout);

        btnPrev.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/prev.gif"))); // NOI18N
        btnPrev.setFocusable(false);
        btnPrev.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnPrev.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(btnPrev);

        btnNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/next.gif"))); // NOI18N
        btnNext.setFocusable(false);
        btnNext.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNext.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(btnNext);

        btnUser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/User.png"))); // NOI18N
        btnUser.setFocusable(false);
        btnUser.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnUser.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUserActionPerformed(evt);
            }
        });
        jToolBar1.add(btnUser);

        lbtime.setFont(new java.awt.Font("Times New Roman", 1, 14));
        lbtime.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/timer.png"))); // NOI18N

        jLabel10.setFont(new java.awt.Font("VNI-Present", 0, 36));
        jLabel10.setForeground(new java.awt.Color(255, 0, 0));
        jLabel10.setText("Wellcome to ChildCare System");

        jMenu1.setText("File");

        mnuLogout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/exit(2).png"))); // NOI18N
        mnuLogout.setText("Log out");
        mnuLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuLogoutActionPerformed(evt);
            }
        });
        jMenu1.add(mnuLogout);
        jMenu1.add(jSeparator1);

        mnuExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Exit.png"))); // NOI18N
        mnuExit.setText("Exit");
        mnuExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuExitActionPerformed(evt);
            }
        });
        jMenu1.add(mnuExit);

        jMenuBar1.add(jMenu1);

        jMenu3.setText("Edit");

        mnuEditAdmin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/edit.png"))); // NOI18N
        mnuEditAdmin.setText("Edit information personal");
        mnuEditAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuEditAdminActionPerformed(evt);
            }
        });
        jMenu3.add(mnuEditAdmin);

        mnuchagepass.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/password.gif"))); // NOI18N
        mnuchagepass.setText("Change Password");
        mnuchagepass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuchagepassActionPerformed(evt);
            }
        });
        jMenu3.add(mnuchagepass);

        jMenuBar1.add(jMenu3);

        jMenu2.setText("Help");

        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Help2.png"))); // NOI18N
        jMenuItem1.setText("Help Contents");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuItem3.setText("About");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem3);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbtime, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 511, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 764, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbtime)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTabbedPane1, 0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUserActionPerformed

        jTabbedPane1.setSelectedComponent(Admin);
    }//GEN-LAST:event_btnUserActionPerformed

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        InformationAdmin.resetStatus();
        InformationStaff.resetStatus();
        int choice = JOptionPane.showConfirmDialog(this, "Do you want Log out?", "Exit",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (choice == JOptionPane.YES_OPTION) {
           this.setVisible(false);
           new Loginuser(this,true).setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        
        InformationAdmin.resetStatus();
        InformationStaff.resetStatus();
        int choice = JOptionPane.showConfirmDialog(this, "Are you exit?", "Exit",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (choice == JOptionPane.YES_OPTION) {
            System.exit(1);
        }
    }//GEN-LAST:event_btnExitActionPerformed
   
    private void btnAddStaffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddStaffActionPerformed
            new frmAddStaff(this,true).setVisible(true);
            InitTable.inittablestaff(tblStaff);
    }//GEN-LAST:event_btnAddStaffActionPerformed

    @SuppressWarnings("static-access")
    private void btnEditStaffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditStaffActionPerformed
        int n= tblStaff.getSelectedRow();
        if(n==-1)
        {
            JOptionPane.showMessageDialog(this,"Choose a Staff to Edit");
            return;
        }

        Vector temp;
        if(searchStaff)
        {
            temp=(Vector)vtDataSearchStaff.get(n);
            txtSearch.setText("");
        }
        else
        {
           new InitTable().inittablestaff(tblStaff);
           temp = (Vector) InitTable.vtData.get(n);
          
        }
         StaffID = (String) temp.get(0);
        new frmEditStaff(this,true).setVisible(true);
        new InitTable().inittablestaff(tblStaff);
        searchStaff=false;
    }//GEN-LAST:event_btnEditStaffActionPerformed

    @SuppressWarnings("static-access")
    private void btnResetPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetPassActionPerformed
       try {
            int get_select_row = tblStaff.getSelectedRow();
            if (get_select_row == -1) {
                JOptionPane.showMessageDialog(this, "Choose a Staff to Edit");
                return;
            }
            new InitTable().inittablestaff(tblStaff);
            Vector temp = (Vector) InitTable.vtData.get(get_select_row);
            String No = (String) temp.get(0);
            Connection cnn = MyConnection.getConnection();
            String strSql = "update tblStaff set Password=? where StaffNo=?";
            PreparedStatement pstmt = cnn.prepareStatement(strSql);
            pstmt.setString(1, MD5Password.getEncodedPassword("123456"));
            pstmt.setString(2, No);
            pstmt.executeUpdate();
            JOptionPane.showMessageDialog(this, "Reset Password successfully");
            MyConnection.close(pstmt);
            MyConnection.close(cnn);
        } catch (NoSuchAlgorithmException ex) {
            ex.printStackTrace();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,"Error:"+ex.getMessage());
            return;
        }
    }//GEN-LAST:event_btnResetPassActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed

    searchStaff=true;
    if (txtSearch.getText().length() == 0) {
            JOptionPane.showMessageDialog(this, "Enter a key to Search!");
            return;
        }
        if(txtchoice.getSelectedItem().toString().equals("ID")){
            try {
                @SuppressWarnings(value = "static-access")
                Connection cn = null;
                PreparedStatement prstm = null;
                cn=MyConnection.getConnection();
                String strSQL = "select StaffNo,UserName,FullName,Sex,Birthday,Address,Phone,Email,StartDate,Feedback"+
                        " from tblStaff where StaffNo like ?";
                vtCol = new Vector();
                vtDataSearchStaff = new Vector();

                prstm = cn.prepareStatement(strSQL);
                prstm.setString(1, "%" + txtSearch.getText() + "%");
                ResultSet rs = prstm.executeQuery();
                ResultSetMetaData rsmt = rs.getMetaData();
                 //Add data to vtCol:
                for (int i = 1; i <= rsmt.getColumnCount(); i++) {
                    vtCol.add(rsmt.getColumnName(i));
                }
                //Add data to vtData:
                while (rs.next()) {
                Vector vtRow = new Vector();

                for (int i = 1; i <= rsmt.getColumnCount(); i++) {
                    vtRow.add(rs.getString(i));
                }

                vtDataSearchStaff.add(vtRow);
                }

                tblStaff.setModel(new DefaultTableModel(vtDataSearchStaff, vtCol));
                MyConnection.close(rs);
                MyConnection.close(prstm);
                MyConnection.close(cn);
            } catch (SQLException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this,"Error:"+ex.getMessage());
                return;
            }
        }
        if(txtchoice.getSelectedItem().toString().equals("Name")){
            try {
                @SuppressWarnings(value = "static-access")
                Connection cn = null;
                PreparedStatement prstm = null;
                cn=MyConnection.getConnection();
                String strSQL = "select StaffNo,UserName,FullName,Sex,Birthday,Address,Phone,Email,StartDate,Feedback"+
                        " from tblStaff where FullName like ?";
                vtCol = new Vector();
                vtDataSearchStaff = new Vector();

                prstm = cn.prepareStatement(strSQL);
                prstm.setString(1, "%" + txtSearch.getText() + "%");
                ResultSet rs = prstm.executeQuery();
                ResultSetMetaData rsmt = rs.getMetaData();
                 //Add data to vtCol:
                for (int i = 1; i <= rsmt.getColumnCount(); i++) {
                    vtCol.add(rsmt.getColumnName(i));
                }
                //Add data to vtData:
                while (rs.next()) {
                Vector vtRow = new Vector();

                for (int i = 1; i <= rsmt.getColumnCount(); i++) {
                    vtRow.add(rs.getString(i));
                }

                vtDataSearchStaff.add(vtRow);
                }

                tblStaff.setModel(new DefaultTableModel(vtDataSearchStaff, vtCol));
                MyConnection.close(rs);
                MyConnection.close(prstm);
                MyConnection.close(cn);
            } catch (SQLException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this,"Error:"+ex.getMessage());
                return;
            }
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnAddChildActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddChildActionPerformed
        new frmAddChild().setVisible(true);
        InitTable.initTableChild(tblChild);
    }//GEN-LAST:event_btnAddChildActionPerformed

    @SuppressWarnings("static-access")
    private void btnEditChildActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditChildActionPerformed

        int n= tblChild.getSelectedRow();
        if(n==-1)
        {
            JOptionPane.showMessageDialog(this,"Choose a Child to Edit");
            return;
        }

        Vector temp;
        if(searchChild)
        {
            temp=(Vector)vtDataSearchChild.get(n);
            txtSearchChild.setText("");
        }
        else
        {
           new InitTable().initTableChild(tblChild);
           temp = (Vector) InitTable.vtData.get(n);

        }
         ChildID = (String) temp.get(0);
        new frmEditChild().setVisible(true);
        new InitTable().initTableChild(tblChild);
        searchChild=false;
    }//GEN-LAST:event_btnEditChildActionPerformed

    private void btnSearchChildActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchChildActionPerformed
        searchChild=true;
        if (txtSearchChild.getText().length() == 0) {
            JOptionPane.showMessageDialog(this, "Enter a key to Search!");
            return;
        }
        if(txtchoicechild.getSelectedItem().toString().equals("ID")){
            try {
               
                @SuppressWarnings(value = "static-access")
                Connection cn = null;
                PreparedStatement prstm = null;
                cn=MyConnection.getConnection();
                String strSQL = "select ChildID,ClassID,LastName,FirstName,Sex,Birthday,"+
                    "ParentName,RegistrationDate,DateReceived"+
                        " from tblChild where ChildID like ?";
                vtCol = new Vector();
                vtDataSearchChild = new Vector();

                prstm = cn.prepareStatement(strSQL);
                prstm.setString(1, "%" + txtSearchChild.getText() + "%");
                ResultSet rs = prstm.executeQuery();
                ResultSetMetaData rsmt = rs.getMetaData();
                 //Add data to vtCol:
                for (int i = 1; i <= rsmt.getColumnCount(); i++) {
                    vtCol.add(rsmt.getColumnName(i));
                }
                //Add data to vtData:
                while (rs.next()) {
                Vector vtRow = new Vector();

                for (int i = 1; i <= rsmt.getColumnCount(); i++) {
                    vtRow.add(rs.getString(i));
                }

                vtDataSearchChild.add(vtRow);
                }

                tblChild.setModel(new DefaultTableModel(vtDataSearchChild, vtCol));
                MyConnection.close(rs);
                MyConnection.close(prstm);
                MyConnection.close(cn);
            } catch (SQLException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this,"Error:"+ex.getMessage());
                return;
            }
        }
        if(txtchoicechild.getSelectedItem().toString().equals("Name")){
            try {
                @SuppressWarnings(value = "static-access")
                Connection cn = null;
                PreparedStatement prstm = null;
                cn=MyConnection.getConnection();
                String strSQL = "select ChildID,ClassID,LastName,FirstName,Sex,Birthday,"+
                    "ParentName,RegistrationDate,DateReceived"+
                        " from tblChild where LastName like ?";
                vtCol = new Vector();
                vtDataSearchChild = new Vector();

                prstm = cn.prepareStatement(strSQL);
                prstm.setString(1, "%" + txtSearchChild.getText() + "%");
                ResultSet rs = prstm.executeQuery();
                ResultSetMetaData rsmt = rs.getMetaData();
                 //Add data to vtCol:
                for (int i = 1; i <= rsmt.getColumnCount(); i++) {
                    vtCol.add(rsmt.getColumnName(i));
                }
                //Add data to vtData:
                while (rs.next()) {
                Vector vtRow = new Vector();

                for (int i = 1; i <= rsmt.getColumnCount(); i++) {
                    vtRow.add(rs.getString(i));
                }

                vtDataSearchChild.add(vtRow);
                }

                tblChild.setModel(new DefaultTableModel(vtDataSearchChild, vtCol));
                MyConnection.close(rs);
                MyConnection.close(prstm);
                MyConnection.close(cn);
            } catch (SQLException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this,"Error:"+ex.getMessage());
                return;
            }
        }
    }//GEN-LAST:event_btnSearchChildActionPerformed

    private void mnuLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuLogoutActionPerformed
        InformationAdmin.resetStatus();
        InformationStaff.resetStatus();
        int choice = JOptionPane.showConfirmDialog(this, "Do you want Log out?", "Exit",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (choice == JOptionPane.YES_OPTION) {
           this.setVisible(false);
           new Loginuser(this,true).setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_mnuLogoutActionPerformed

    private void mnuExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuExitActionPerformed
        InformationAdmin.resetStatus();
        InformationStaff.resetStatus();
        int choice = JOptionPane.showConfirmDialog(this, "Are you exit?", "Exit",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (choice == JOptionPane.YES_OPTION) {
            System.exit(1);
        }
    }//GEN-LAST:event_mnuExitActionPerformed

    @SuppressWarnings("static-access")
    private void btnAddNannyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNannyActionPerformed

            new frmAddNanny(this,true).setVisible(true);
            new InitTable().inittableNanny(tblNanny);
    }//GEN-LAST:event_btnAddNannyActionPerformed

    @SuppressWarnings("static-access")
    private void btnEditNannyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditNannyActionPerformed
        int n= tblNanny.getSelectedRow();
        if(n==-1)
        {
            JOptionPane.showMessageDialog(this,"Choose a Nanny to Edit");
            return;
        }

        Vector temp;
        if(searchNanny)
        {
            temp=(Vector)vtDataSearchNanny.get(n);
            txtSearchNanny.setText("");
        }
        else
        {
           new InitTable().inittableNanny(tblNanny);
           temp = (Vector) InitTable.vtData.get(n);

        }
        NannyID = (String) temp.get(0);
        new frmEditNanny(this,true).setVisible(true);
        new InitTable().inittableNanny(tblNanny);
        searchNanny=false;
    }//GEN-LAST:event_btnEditNannyActionPerformed

    private void btnSearchNannyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchNannyActionPerformed
        searchNanny=true;
        if (txtSearchNanny.getText().length() == 0) {
            JOptionPane.showMessageDialog(this, "Enter a key to Search!");
            return;
        }
        if(txtchoicenanny.getSelectedItem().toString().equals("ID")){
            try {
                
                @SuppressWarnings(value = "static-access")
                Connection cn = null;
                PreparedStatement prstm = null;
                cn=MyConnection.getConnection();
                String strSQL = "select * from tblNanny where NannyID like ?";
                vtCol = new Vector();
                vtDataSearchNanny = new Vector();

                prstm = cn.prepareStatement(strSQL);
                prstm.setString(1, "%" + txtSearchNanny.getText() + "%");
                ResultSet rs = prstm.executeQuery();
                ResultSetMetaData rsmt = rs.getMetaData();
                 //Add data to vtCol:
                for (int i = 1; i <= rsmt.getColumnCount(); i++) {
                    vtCol.add(rsmt.getColumnName(i));
                }
                //Add data to vtData:
                while (rs.next()) {
                Vector vtRow = new Vector();

                for (int i = 1; i <= rsmt.getColumnCount(); i++) {
                    vtRow.add(rs.getString(i));
                }

                vtDataSearchNanny.add(vtRow);
                }

                tblNanny.setModel(new DefaultTableModel(vtDataSearchNanny, vtCol));
                MyConnection.close(rs);
                MyConnection.close(prstm);
                MyConnection.close(cn);
            } catch (SQLException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this,"Error:"+ex.getMessage());
                return;
            }
        }
        if(txtchoicenanny.getSelectedItem().toString().equals("Name")){
            try {
                
                @SuppressWarnings(value = "static-access")
                Connection cn = null;
                PreparedStatement prstm = null;
                cn=MyConnection.getConnection();
                String strSQL = "select * from tblNanny where FullName like ?";
                vtCol = new Vector();
                vtDataSearchNanny = new Vector();

                prstm = cn.prepareStatement(strSQL);
                prstm.setString(1, "%" + txtSearchNanny.getText() + "%");
                ResultSet rs = prstm.executeQuery();
                ResultSetMetaData rsmt = rs.getMetaData();
                 //Add data to vtCol:
                for (int i = 1; i <= rsmt.getColumnCount(); i++) {
                    vtCol.add(rsmt.getColumnName(i));
                }
                //Add data to vtData:
                while (rs.next()) {
                Vector vtRow = new Vector();

                for (int i = 1; i <= rsmt.getColumnCount(); i++) {
                    vtRow.add(rs.getString(i));
                }

                vtDataSearchNanny.add(vtRow);
                }

                tblNanny.setModel(new DefaultTableModel(vtDataSearchNanny, vtCol));
                MyConnection.close(rs);
                MyConnection.close(prstm);
                MyConnection.close(cn);
            } catch (SQLException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this,"Error:"+ex.getMessage());
                return;
            }
        }
    }//GEN-LAST:event_btnSearchNannyActionPerformed

    @SuppressWarnings("static-access")
    private void btnAddAgeGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddAgeGroupActionPerformed
        new frmAddAgeGroup(this,true).setVisible(true);
        new InitTable().inittableAgeGroup(tblAgeGroup);
    }//GEN-LAST:event_btnAddAgeGroupActionPerformed

    @SuppressWarnings("static-access")
    private void btnEditAgeGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditAgeGroupActionPerformed
        int n= tblAgeGroup.getSelectedRow();
        if(n==-1)
        {
            JOptionPane.showMessageDialog(this,"Choose a AgeGroup to Edit");
            return;
        }

           Vector temp;
           new InitTable().inittableAgeGroup(tblAgeGroup);
           temp = (Vector) InitTable.vtData.get(n);

        AgeGroupID = (String) temp.get(0);
        new frmEditAgeGroup(this,true).setVisible(true);
        new InitTable().inittableAgeGroup(tblAgeGroup);
    }//GEN-LAST:event_btnEditAgeGroupActionPerformed

    @SuppressWarnings("static-access")
    private void btnEditActiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActiveActionPerformed
        int n= tblActive.getSelectedRow();
        if(n==-1)
        {
            JOptionPane.showMessageDialog(this,"Choose a Active to Edit");
            return;
        }

        Vector temp;
        if(searchActive)
        {
            temp=(Vector)vtDataSearchActive.get(n);
            txtSearchActive.setText("");
        }
        else
        {
           new InitTable().inittableActive(tblActive);
           temp = (Vector) InitTable.vtData.get(n);

        }
        ActiveID = (String) temp.get(0);
        new frmEditActive(this,true).setVisible(true);
        new InitTable().inittableActive(tblActive);
        searchActive=false;
    }//GEN-LAST:event_btnEditActiveActionPerformed

    private void btnSearchActiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActiveActionPerformed
        searchActive=true;
        if (txtSearchActive.getText().length() == 0) {
            JOptionPane.showMessageDialog(this, "Enter a key to Search!");
            return;
        }
        if(txtchoiceActive.getSelectedItem().toString().equals("ID")){
            try {

                @SuppressWarnings(value = "static-access")
                Connection cn = null;
                PreparedStatement prstm = null;
                cn=MyConnection.getConnection();
                String strSQL = "select * from tblActivities where ActiveID like ?";
                vtCol = new Vector();
                vtDataSearchActive = new Vector();

                prstm = cn.prepareStatement(strSQL);
                prstm.setString(1, "%" + txtSearchActive.getText() + "%");
                ResultSet rs = prstm.executeQuery();
                ResultSetMetaData rsmt = rs.getMetaData();
                 //Add data to vtCol:
                for (int i = 1; i <= rsmt.getColumnCount(); i++) {
                    vtCol.add(rsmt.getColumnName(i));
                }
                //Add data to vtData:
                while (rs.next()) {
                Vector vtRow = new Vector();

                for (int i = 1; i <= rsmt.getColumnCount(); i++) {
                    vtRow.add(rs.getString(i));
                }

                vtDataSearchActive.add(vtRow);
                }

                tblActive.setModel(new DefaultTableModel(vtDataSearchActive, vtCol));
                MyConnection.close(rs);
                MyConnection.close(prstm);
                MyConnection.close(cn);
            } catch (SQLException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this,"Error:"+ex.getMessage());
                return;
            }
        }
        if(txtchoiceActive.getSelectedItem().toString().equals("Name")){
            try {

                @SuppressWarnings(value = "static-access")
                Connection cn = null;
                PreparedStatement prstm = null;
                cn=MyConnection.getConnection();
                String strSQL = "select * from tblActivities where ActiveName like ?";
                vtCol = new Vector();
                vtDataSearchActive = new Vector();

                prstm = cn.prepareStatement(strSQL);
                prstm.setString(1, "%" + txtSearchActive.getText() + "%");
                ResultSet rs = prstm.executeQuery();
                ResultSetMetaData rsmt = rs.getMetaData();
                 //Add data to vtCol:
                for (int i = 1; i <= rsmt.getColumnCount(); i++) {
                    vtCol.add(rsmt.getColumnName(i));
                }
                //Add data to vtData:
                while (rs.next()) {
                Vector vtRow = new Vector();

                for (int i = 1; i <= rsmt.getColumnCount(); i++) {
                    vtRow.add(rs.getString(i));
                }

                vtDataSearchActive.add(vtRow);
                }

                tblActive.setModel(new DefaultTableModel(vtDataSearchActive, vtCol));
                MyConnection.close(rs);
                MyConnection.close(prstm);
                MyConnection.close(cn);
            } catch (SQLException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this,"Error:"+ex.getMessage());
                return;
            }
        }
    }//GEN-LAST:event_btnSearchActiveActionPerformed

    @SuppressWarnings("static-access")
    private void btnAddClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddClassActionPerformed
        new frmAddClass().setVisible(true);
        new InitTable().inittableClass(tblClass);
    }//GEN-LAST:event_btnAddClassActionPerformed

    
    private void btnEditClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditClassActionPerformed
        int n= tblClass.getSelectedRow();
        if(n==-1)
        {
            JOptionPane.showMessageDialog(this,"Choose a Class to Edit");
            return;
        }

           Vector temp;
           if(searchClass)
           {
            temp=(Vector)vtDataSearchClass.get(n);
            txtSearchClass.setText("");
           }
           else{
               InitTable.inittableClass(tblClass);
               temp = (Vector) InitTable.vtData.get(n);
           }

        ClassID = (String) temp.get(0);
        new frmEditClass().setVisible(true);
        InitTable.inittableClass(tblClass);
        searchClass=false;
    }//GEN-LAST:event_btnEditClassActionPerformed

     @SuppressWarnings("static-access")
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        new InitTable().inittableClass(tblClass);
    }//GEN-LAST:event_jButton1ActionPerformed

     private void btnDetailStaffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetailStaffActionPerformed
        int n= tblStaff.getSelectedRow();
        if(n==-1)
        {
            JOptionPane.showMessageDialog(this,"Choose a Staff to View");
            return;
        }

           Vector temp;
           if(searchStaff)
           {
            temp=(Vector)vtDataSearchStaff.get(n);
            txtSearch.setText("");
           }
           else{
               InitTable.inittablestaff(tblStaff);
               temp = (Vector) InitTable.vtData.get(n);
           }


        StaffID = (String) temp.get(0);
        new frmDetailStaff(this,true).setVisible(true);
        InitTable.inittablestaff(tblStaff);
        searchStaff=false;
     }//GEN-LAST:event_btnDetailStaffActionPerformed

    @SuppressWarnings("static-access")
     private void btnDetailChildActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetailChildActionPerformed
        int n= tblChild.getSelectedRow();
        if(n==-1)
        {
            JOptionPane.showMessageDialog(this,"Choose a Child to Edit");
            return;
        }

        Vector temp;
        if(searchChild)
        {
            temp=(Vector)vtDataSearchChild.get(n);
            txtSearchChild.setText("");
        }
        else
        {
           new InitTable().initTableChild(tblChild);
           temp = (Vector) InitTable.vtData.get(n);

        }
         ChildID = (String) temp.get(0);
        new frmDetailChild(this,true).setVisible(true);
        new InitTable().initTableChild(tblChild);
        searchChild=false;
     }//GEN-LAST:event_btnDetailChildActionPerformed

    @SuppressWarnings("static-access")
     private void btnDetailNannyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetailNannyActionPerformed
        int n= tblNanny.getSelectedRow();
        if(n==-1)
        {
            JOptionPane.showMessageDialog(this,"Choose a Nanny to View");
            return;
        }

        Vector temp;
        if(searchNanny)
        {
            temp=(Vector)vtDataSearchNanny.get(n);
            txtSearchNanny.setText("");
        }
        else
        {
           new InitTable().inittableNanny(tblNanny);
           temp = (Vector) InitTable.vtData.get(n);

        }
        NannyID = (String) temp.get(0);
        new frmDetailNanny(this,true).setVisible(true);
        new InitTable().inittableNanny(tblNanny);
        searchNanny=false;
     }//GEN-LAST:event_btnDetailNannyActionPerformed

    @SuppressWarnings("static-access")
    private void btnDetailClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetailClassActionPerformed
        int n= tblClass.getSelectedRow();
        if(n==-1)
        {
            JOptionPane.showMessageDialog(this,"Choose a Class to View");
            return;
        }

           Vector temp;
        if(searchClass)
        {
            temp=(Vector)vtDataSearchClass.get(n);
            txtSearchClass.setText("");
        }
        else
        {
           new InitTable().inittableClass(tblClass);
           temp = (Vector) InitTable.vtData.get(n);

        }

        ClassID = (String) temp.get(0);
        new frmDetailClass(this, true).setVisible(true);
        InitTable.inittableClass(tblClass);
        searchClass=false;
    }//GEN-LAST:event_btnDetailClassActionPerformed

    private void btnDetailAgeGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetailAgeGroupActionPerformed
        int n= tblAgeGroup.getSelectedRow();
        if(n==-1)
        {
            JOptionPane.showMessageDialog(this,"Choose a Class to View");
            return;
        }

           Vector temp;
           InitTable.inittableAgeGroup(tblAgeGroup);
           temp = (Vector) InitTable.vtData.get(n);

        ClassID = (String) temp.get(0);
        new frmDetailAgeGroup(this, true).setVisible(true);
        InitTable.inittableAgeGroup(tblAgeGroup);
 
    }//GEN-LAST:event_btnDetailAgeGroupActionPerformed

    private void btnSearchClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchClassActionPerformed
        searchClass=true;
        if (txtSearchClass.getText().length() == 0) {
            JOptionPane.showMessageDialog(this, "Enter a key to Search!");
            return;
        }
        if(txtchoiceClass.getSelectedItem().toString().equals("ID")){
            try {

                @SuppressWarnings(value = "static-access")
                Connection cn = null;
                PreparedStatement prstm = null;
                cn=MyConnection.getConnection();
                String strSQL = "select * from tblClass where ClassID like ?";
                vtCol = new Vector();
                vtDataSearchClass = new Vector();

                prstm = cn.prepareStatement(strSQL);
                prstm.setString(1, "%" + txtSearchClass.getText() + "%");
                ResultSet rs = prstm.executeQuery();
                ResultSetMetaData rsmt = rs.getMetaData();
                 //Add data to vtCol:
                for (int i = 1; i <= rsmt.getColumnCount(); i++) {
                    vtCol.add(rsmt.getColumnName(i));
                }
                //Add data to vtData:
                while (rs.next()) {
                Vector vtRow = new Vector();

                for (int i = 1; i <= rsmt.getColumnCount(); i++) {
                    vtRow.add(rs.getString(i));
                }

                vtDataSearchClass.add(vtRow);
                }

                tblClass.setModel(new DefaultTableModel(vtDataSearchClass, vtCol));
                MyConnection.close(rs);
                MyConnection.close(prstm);
                MyConnection.close(cn);
            } catch (SQLException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this,"Error:"+ex.getMessage());
                return;
            }
        }
        if(txtchoiceClass.getSelectedItem().toString().equals("Name")){
            try {

                @SuppressWarnings(value = "static-access")
                Connection cn = null;
                PreparedStatement prstm = null;
                cn=MyConnection.getConnection();
                String strSQL = "select * from tblClass where ClassName like ?";
                vtCol = new Vector();
                vtDataSearchClass = new Vector();

                prstm = cn.prepareStatement(strSQL);
                prstm.setString(1, "%" + txtSearchClass.getText() + "%");
                ResultSet rs = prstm.executeQuery();
                ResultSetMetaData rsmt = rs.getMetaData();
                 //Add data to vtCol:
                for (int i = 1; i <= rsmt.getColumnCount(); i++) {
                    vtCol.add(rsmt.getColumnName(i));
                }
                //Add data to vtData:
                while (rs.next()) {
                Vector vtRow = new Vector();

                for (int i = 1; i <= rsmt.getColumnCount(); i++) {
                    vtRow.add(rs.getString(i));
                }

                vtDataSearchClass.add(vtRow);
                }

                tblClass.setModel(new DefaultTableModel(vtDataSearchClass, vtCol));
                MyConnection.close(rs);
                MyConnection.close(prstm);
                MyConnection.close(cn);
            } catch (SQLException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this,"Error:"+ex.getMessage());
                return;
            }
        }
    }//GEN-LAST:event_btnSearchClassActionPerformed

    @SuppressWarnings("static-access")
    private void btnAddactiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddactiveActionPerformed
        new frmAddActive(this,true).setVisible(true);
        new InitTable().inittableActive(tblActive);
    }//GEN-LAST:event_btnAddactiveActionPerformed
    //this method get Nanny have Status=1 to the click button "SelectClass",
    //if Nanny has the Status=1 call frmSelectClassforNanny 
    //else report "Nanny not Active please choice other Nanny" and return
    public  boolean  getNannyID(String str){
        try {
            Connection cn = MyConnection.getConnection();

            String strSQL = "select NannyID from tblNanny  where Status=1";
            PreparedStatement prsm=cn.prepareStatement(strSQL);
            ResultSet rs = prsm.executeQuery();

            while(rs.next()){
                String ID=rs.getString(1);
                if(ID.equalsIgnoreCase(str)){
                    return true;
                }
            }
            //return false;
            MyConnection.close(rs);
            MyConnection.close(prsm);
            MyConnection.close(cn);
            return false;

        } catch (SQLException ex) {
            ex.printStackTrace();
            return false;
        }
        //return "";

    }
    @SuppressWarnings("static-access")
    private void addSelectClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSelectClassActionPerformed
        int n= tblNanny.getSelectedRow();
        if(n==-1)
        {
            JOptionPane.showMessageDialog(this,"Choose a Nanny to View");
            return;
        }
        Vector temp;
        if(searchNanny)
        {
            temp=(Vector)vtDataSearchNanny.get(n);
            txtSearchNanny.setText("");
        }
        else
        {
           new InitTable().inittableNanny(tblNanny);
           temp = (Vector) InitTable.vtData.get(n);

        }
        NannyID = (String) temp.get(0);
        if(!getNannyID(NannyID)){
            JOptionPane.showMessageDialog(this,"Nanny not Active please choice other Nanny");
            return;
        }
        else{
            new frmSelectClassforNanny(this,true).setVisible(true);
            searchNanny=false;
        }
    }//GEN-LAST:event_addSelectClassActionPerformed
     //this method get Class have Status=1 to the click button "SelectClass",
    //if Class has the Status=1 call frmSelectActiveforClas
    //else report "Class not Active please choice other Class" and return
    public  boolean  getClassID(String str){
        try {
            Connection cn = MyConnection.getConnection();

            String strSQL = "select ClassID from tblClass  where Status=1";
            PreparedStatement prsm=cn.prepareStatement(strSQL);
            ResultSet rs = prsm.executeQuery();

            while(rs.next()){
                String ID=rs.getString(1);
                if(ID.equalsIgnoreCase(str)){
                    return true;
                }
            }
            MyConnection.close(rs);
            MyConnection.close(prsm);
            MyConnection.close(cn);
            return false;

        } catch (SQLException ex) {
            ex.printStackTrace();
            return false;
        }
    }
    @SuppressWarnings("static-access")
    private void btnAddActiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActiveActionPerformed
        int n= tblClass.getSelectedRow();
        if(n==-1)
        {
            JOptionPane.showMessageDialog(this,"Choose a Class to View");
            return;
        }

           Vector temp;
        if(searchClass)
        {
            temp=(Vector)vtDataSearchClass.get(n);
            txtSearchClass.setText("");
        }
        else
        {
           new InitTable().inittableClass(tblClass);
           temp = (Vector) InitTable.vtData.get(n);

        }

        ClassID = (String) temp.get(0);
        ClassName=(String) temp.get(1);
        AgegroupId=(String) temp.get(2);
        if(!getClassID(ClassID)){
            JOptionPane.showMessageDialog(this,"Class not Active please choice other Class");
            return;
        }
        else{
            new frmSelectActiveForClass(this,true).setVisible(true);
            InitTable.inittableClass(tblClass);
            searchClass=false;
        }

    }//GEN-LAST:event_btnAddActiveActionPerformed

private void lbNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lbNameActionPerformed
    // TODO add your handling code here:
}//GEN-LAST:event_lbNameActionPerformed

private void lbEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lbEmailActionPerformed
    // TODO add your handling code here:
}//GEN-LAST:event_lbEmailActionPerformed

private void mnuEditAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuEditAdminActionPerformed
        AdminID=InformationAdmin.getUser();
        new frmEditAdmin(this,true).setVisible(true);
        initAdmin();
}//GEN-LAST:event_mnuEditAdminActionPerformed

private void mnuchagepassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuchagepassActionPerformed
        if(Loginuser.logIsAdmin){
            new frmChangePassAdmin(this,true).setVisible(true);
        }
        else{
            new frmChangePassStaff(this,true).setVisible(true);
        }
}//GEN-LAST:event_mnuchagepassActionPerformed

    @SuppressWarnings("static-access")
private void btnDetailActiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetailActiveActionPerformed
    int n= tblActive.getSelectedRow();
        if(n==-1)
        {
            JOptionPane.showMessageDialog(this,"Choose a Active to View");
            return;
        }

           Vector temp;
        if(searchActive)
        {
            temp=(Vector)vtDataSearchActive.get(n);
            txtSearchActive.setText("");
        }
        else
        {
           new InitTable().inittableActive(tblActive);
           temp = (Vector) InitTable.vtData.get(n);

        }

        ActiveID = (String) temp.get(0);
        new frmDetailActive(this, true).setVisible(true);
        InitTable.inittableActive(tblActive);
        searchClass=false;
}//GEN-LAST:event_btnDetailActiveActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
       try {Runtime.getRuntime().exec(".\\hh.exe .\\Help.chm" );
       }catch(Exception ex){
           JOptionPane.showMessageDialog(this,"Error:"+ex.getMessage());
           return;
       }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        new About(this,true).setVisible(true);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    public class ThreadTime extends Thread{
    @Override
    public void run(){

        while(true){
            Date d=new Date();
            lbtime.setText(d.toString());
            try{
               Thread.sleep(1000);
            }catch(InterruptedException e){
                System.out.println(e.getMessage());
            }
        }
    }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Admin;
    private javax.swing.JButton addSelectClass;
    private javax.swing.JButton btnAddActive;
    private javax.swing.JButton btnAddAgeGroup;
    private javax.swing.JButton btnAddChild;
    private javax.swing.JButton btnAddClass;
    private javax.swing.JButton btnAddNanny;
    private javax.swing.JButton btnAddStaff;
    private javax.swing.JButton btnAddactive;
    private javax.swing.JButton btnDetailActive;
    private javax.swing.JButton btnDetailAgeGroup;
    private javax.swing.JButton btnDetailChild;
    private javax.swing.JButton btnDetailClass;
    private javax.swing.JButton btnDetailNanny;
    private javax.swing.JButton btnDetailStaff;
    private javax.swing.JButton btnEditActive;
    private javax.swing.JButton btnEditAgeGroup;
    private javax.swing.JButton btnEditChild;
    private javax.swing.JButton btnEditClass;
    private javax.swing.JButton btnEditNanny;
    private javax.swing.JButton btnEditStaff;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrev;
    private javax.swing.JButton btnResetPass;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnSearchActive;
    private javax.swing.JButton btnSearchChild;
    private javax.swing.JButton btnSearchClass;
    private javax.swing.JButton btnSearchNanny;
    private javax.swing.JButton btnUser;
    private javax.swing.ButtonGroup btngActive;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTextField lbAddress;
    private javax.swing.JLabel lbDescription;
    private javax.swing.JTextField lbEmail;
    private javax.swing.JTextField lbName;
    private javax.swing.JTextField lbPhone;
    private javax.swing.JTextField lbUserName;
    private javax.swing.JLabel lbtime;
    private javax.swing.JMenuItem mnuEditAdmin;
    private javax.swing.JMenuItem mnuExit;
    private javax.swing.JMenuItem mnuLogout;
    private javax.swing.JMenuItem mnuchagepass;
    private javax.swing.JTable tblActive;
    private javax.swing.JTable tblAgeGroup;
    private javax.swing.JTable tblChild;
    private javax.swing.JTable tblClass;
    private javax.swing.JTable tblNanny;
    private javax.swing.JTable tblStaff;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtSearchActive;
    private javax.swing.JTextField txtSearchChild;
    private javax.swing.JTextField txtSearchClass;
    private javax.swing.JTextField txtSearchNanny;
    private javax.swing.JComboBox txtchoice;
    private javax.swing.JComboBox txtchoiceActive;
    private javax.swing.JComboBox txtchoiceClass;
    private javax.swing.JComboBox txtchoicechild;
    private javax.swing.JComboBox txtchoicenanny;
    // End of variables declaration//GEN-END:variables

}
